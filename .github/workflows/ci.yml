name: CI Pipeline
 
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
 
jobs:
  lint:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
 
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
 
      - name: Run Ruff Lint
        run: ruff check app/
 
  format:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
 
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
 
      - name: Run Ruff Lint
        run: ruff format app/
 
  test:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
 
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov streamlit
 
      - name: Check for test files
        id: check_tests
        run: |
          if ! find . -type f -name "test_*.py" -or -name "*_test.py" | grep -q .; then
            echo "No test files found."
            echo "skip_upload=true" >> $GITHUB_ENV
          else
            echo "Test files found."
            echo "skip_upload=false" >> $GITHUB_ENV
          fi
 
      - name: Run tests
        if: steps.check_tests.outputs.skip_upload == 'false'
        run: pytest --cov --junitxml=junit.xml -o junit_family=legacy
 
      - name: Upload coverage to Codecov
        if: steps.check_tests.outputs.skip_upload == 'false'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
 